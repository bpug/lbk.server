@model Lbk.MobileApp.Core.PagedDataList<Lbk.MobileApp.Domain.Models.StatisticsWeekFlatModel>

@{
    if (Model.Count > 0)
    {
        <div style="text-align: right; margin-bottom: 5px;">
            <a href="#" id="export" data-action="@Url.Action(MVC.Statistics.GetCsv())">Export</a>
        </div>
        var grid = new WebGrid(canPage: false, canSort: false, rowsPerPage: Model.PageSize, ajaxUpdateContainerId: "grid");

        grid.Bind(Model.Items, rowCount: Model.TotalItemCount, autoSortAndPage: false);
        @grid.GetHtml(htmlAttributes: new { id = "grid", width = "100%" },
                 headerStyle: "webgrid-header",
                            alternatingRowStyle: "webgrid-alternating-row",
                            rowStyle: "webgrid-row-style",
                            selectedRowStyle: "webgrid-selected-row",
                    columns: grid.Columns(
                                    grid.Column("Year", header: "Jahr"),
                                    grid.Column("Week", header: "KW"),
                                    grid.Column(header: "Datum", format: (item) => new MvcHtmlString(string.Format("{0:dd.MM.yyyy}<br/>{1:dd.MM.yyyy}", item.FirstDateOfWeek, item.LasrDateOfWeek))),
                                    grid.Column("Bilder", header: "Bilder abgerufen"),
                                    grid.Column("Events", header: "Events abgerufen"),
                                    grid.Column("Quiz", header: "Quiz gestartet"),
                                    grid.Column("Tageskarte", header: "Tageskarte abgerufen"),
                                    grid.Column("Videos", header: "Videos abgerufen"),
                                    grid.Column("Reservierung", header: "Reservierung angefragt"),
                                    grid.Column("ReservierungGast", header: "Reservierung vom Gast bestätigt"),
                                    grid.Column("Gesamt", header: "Gesamt")
                        ),
                        mode: WebGridPagerModes.FirstLast | WebGridPagerModes.Numeric | WebGridPagerModes.NextPrevious)
    }
    else
    {
        <div>
            Keine Daten.
        </div>
    }
}
@*<div id="selectPageSize"  data-action="@Url.Action(MVC.Statistics.Index())">
    @Html.DropDownListFor(x => x.PageSize, new SelectList(new[] { "10", "20", "30", "40", "50", "100" }))
</div>*@
