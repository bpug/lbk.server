@using Lbk.MobileApp.Domain.Resources
@using Lbk.MobileApp.Web.Helpers

@model Lbk.MobileApp.Web.Models.PictureFormModel
@{
    ViewBag.Title = string.Format("{0} - [{0} {1} ]", Messages.Picture, Messages.Edit);
}
<h2>
    @Messages.Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/methods_de.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/EditorHookup.js")" type="text/javascript"></script>
@using (Html.BeginForm("Edit", "Picture", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edit Picture</legend>
        <div>
            <div class="picture-data">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Title)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.SortOrder)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.SortOrder)
                    @Html.ValidationMessageFor(model => model.SortOrder)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Link)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Link)
                    @Html.ValidationMessageFor(model => model.Link)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.FileName)
                </div>
                <div class="editor-field">
                    @Html.DisplayFor(model => model.FileName)
                    @Html.ValidationMessageFor(model => model.FileName)
                </div>
                <div class="editor-label"> 
                    @Html.LabelFor(model => model.File)
                </div>
                <div>
                    <input type="file" name="File" id="Image" /> 
                    @Html.ValidationMessageFor(model => model.File)
                </div>
                @Html.HiddenFor(model => model.Id)
                 @Html.HiddenFor(model => model.FileName)
                <p>
                    <input type="submit" value="@Messages.Save" />
                </p>
            </div>
            <div class="picture-image">
                @{
                    if (!string.IsNullOrEmpty(Model.PictureLocation))
                    {
                        @Html.Image(Url.Content(Model.PictureLocation), Html.Encode(Model.Description), new {title = Model.Description, border = 0, height = 320});
                    }
                }
            </div>
        <div style="clear: both;" />
    </div>
    </fieldset>
}
<div>
    @Html.ActionLink(Messages.BackToList, "List")
</div>
